@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<Upendo.Modules.UserManager.ViewModels.UserViewModel>

@using DotNetNuke.Web.Mvc.Helpers
@using Upendo.Modules.UserManager.Utility

@using Lang = Upendo.Modules.UserManager.Utility.Helpers.LocalizationHelper

@{
  string defaultUserPicture = "/" + Constants.ModulePath + "Images/defaultUserPicture.jpg";
  string ResourceName = "AddEdit";
}
<div class="col-7">
  <div class="accountSettings">
    <h4 class="">@Lang.GetString("AccountSettings", ResourceName)</h4>
    @if (!ViewData.ModelState.IsValid)
    {
      <div class="alert alert-danger">
        @Html.ValidationSummary(false, "", new { @class = "" })
      </div>
    }
    <fieldset>
      <div class="formItem col-6">
        <div><label>@Lang.GetString("FirstName", ResourceName)</label></div>
        @Html.TextBoxFor(m => m.FirstName)
        @Html.ValidationMessageFor(m => m.FirstName)
      </div>
      <div class="formItem col-6">
        <div><label>@Lang.GetString("LastName", ResourceName)</label></div>
        @Html.TextBoxFor(m => m.LastName)
        @Html.ValidationMessageFor(m => m.LastName)
      </div>
      <div class="formItem col-6">
        <div><label>@Lang.GetString("Username", ResourceName)</label></div>
        @Html.TextBoxFor(m => m.Username)
        @Html.ValidationMessageFor(m => m.Username)
      </div>
      <div class="formItem col-6">
        <div><label>@Lang.GetString("Email", ResourceName)</label></div>
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @type = "email" })
        @Html.ValidationMessageFor(m => m.Email)
      </div>
      <div class="col-12 mt20" style="font-size: 16px;">
        <div class="col-6">
          @Html.CheckBoxFor(m => m.IsSuperUser, new { @id = "chkIsSuperuser", @class = "superuser-checkbox" })
          <label for="chkIsSuperuser">@Lang.GetString("IsSuperUser", ResourceName)</label>
        </div>
        <div class="col-3">
          @Html.CheckBoxFor(m => m.Approved, new { @id = "chkApproved" })
          <label for="chkApproved">@Lang.GetString("Approved", ResourceName)</label>
        </div>
        <div class="col-3">
          @Html.CheckBoxFor(m => m.IsDeleted, new { @id = "chkIsDeleted" })
          <label for="chkIsDeleted">@Lang.GetString("IsDeleted", ResourceName)</label>
        </div>
        <div class="col-6">
          @Html.CheckBoxFor(m => m.SendEmail, new { @id = "chkSendEmail" })
          <label for="chkSendEmail">@Lang.GetString("SendEmailNewUser", ResourceName)</label>
        </div>
        @Html.HiddenFor(m => m.UserId)
      </div>
    </fieldset>
    <div class="col-12 mt5">
      <a class="btn btn-info btn-sm" id="userRolManagement" href="@Url.Action("UserRoles", "UserManage", new {itemId = @Model.UserId})">
        <span class="color-white">@Lang.GetString("UserRoleManagement", ResourceName)</span>
      </a>
      <a class="btn btn-info btn-sm" id="userRolManagement" href="@Url.Action("PasswordResetLink", "UserManage", new {itemId = @Model.UserId})">
        <span class="color-white">@Lang.GetString("PasswordResetLink", ResourceName)</span>
      </a>
    </div>
  </div>
</div>
<div class="col-5">
  <h4 class="">@Lang.GetString("AccountData", ResourceName)</h4>
  <div class="accountData">
    <div>
      <img src=@defaultUserPicture alt="User" width="200" height="200" class="float-right">
    </div>
    <p>@Lang.GetString("UserId", ResourceName) @Model.UserId</p>
    <p>@Lang.GetString("DisplayName", ResourceName) @Model.DisplayName</p>
    <p>@Lang.GetString("CreatedOnDate", ResourceName) @Model.CreatedOnDate</p>
    <p>@Lang.GetString("LastModifiedOnDate", ResourceName) @Model.LastModifiedOnDate</p>
    <p>@Lang.GetString("UpdatePassword", ResourceName) @Model.UpdatePassword</p>
    <h4>@Lang.GetString("UserRoles", ResourceName)</h4>
    <ul>
      @{
        foreach (var item in Model.UserRoles)
        {
          <li> @item</li>
        }
      }
    </ul>
  </div>
</div>
<div class="col-12 mt20">
  <div class="buttonForm">
    <div class="center">
      <button type="submit" class="dnnPrimaryAction" id="saveButton">@Lang.GetString("Save", ResourceName)</button>
      <button id="cancelEdit" href="#" class="dnnSecondaryAction">@Lang.GetString("Cancel", ResourceName)</button>
    </div>
  </div>
</div>
<script>

</script>
<script type="text/javascript">
     var weak = '@Lang.GetString("Weak.Text", ResourceName)';
    var fair = '@Lang.GetString("Fair.Text", ResourceName)';
    var strong = '@Lang.GetString("Strong.Text", ResourceName)';
    var passwordMatch = '@Lang.GetString("PasswordMatch.Text", ResourceName)';
    var match = '@Lang.GetString("Match.Text", ResourceName)';

    function validatePassStrength(pass, minLength, minNumberOfSpecialChars, validationExpression) {
        var passwordElement = document.getElementById('password');
        var passwordValidationMessage = document.getElementById('passwordValidationMessage');
        if (pass.length < minLength) {
            passwordElement.style.color = "red";
            passwordValidationMessage.style.color = "red";
            return weak;
        }
        var specialChars = pass.match(/[!@@#$%^&*(),.?":{}|<>+\-]/g);
        if (specialChars === null || specialChars.length < minNumberOfSpecialChars) {
            passwordElement.style.color = "#f6d500";
            passwordValidationMessage.style.color = "#f6d500";
            return fair;
        }
        if (validationExpression !== "" && !new RegExp(validationExpression).test(pass)) {
            passwordElement.style.color = "#f6d500";
            passwordValidationMessage.style.color = "#f6d500";
            return fair;
        }
        passwordElement.style.color = "green";
        passwordValidationMessage.style.color = "green";
        return strong;
    }
    function handlePasswordValidation() {
        var password = document.getElementById('password').value;
        var minLength = 7;
        var minNumberOfSpecialChars = 0;
        var validationExpression = "";
        var result = validatePassStrength(password, minLength, minNumberOfSpecialChars, validationExpression);
        var messageElement = document.getElementById('passwordValidationMessage');
        if (messageElement) {
            messageElement.innerHTML = result;
        }
    }
    function validatePassword() {
        var password = document.getElementById('password').value;
        var confirm_password = document.getElementById('confirm_password').value;
        var message = document.getElementById('message');
        if (password == confirm_password) {
            message.style.color = 'green';
            message.innerHTML = Match;
            // Enabling a button again
            document.querySelector('#saveButton').classList.remove("disabled");
            document.querySelector('#saveButton').classList.add("primary");
        } else {
            message.style.color = 'red';
            message.innerHTML = passwordMatch;
            // Disabling a button
            document.querySelector('#saveButton').classList.remove("primary");
            document.querySelector('#saveButton').classList.add("disabled");
        }
    }
    /*globals jQuery, window, Sys */
    (function ($, Sys) {
        function dnnEditBasicSettings() {
            $('#dnnEditBasicSettings').dnnPanels();
            $('#dnnEditBasicSettings .dnnFormExpandContent a').dnnExpandAll({
                expandText: '@Dnn.LocalizeString("ExpandAll")',
                collapseText: '@Dnn.LocalizeString("CollapseAll")',
                targetArea: '#dnnEditBasicSettings'
            });
        };
        $(function () {
            $('#cancelEdit').click(function () { dnnModal.closePopUp(false); });
            dnnEditBasicSettings();
            Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function () {
                dnnEditBasicSettings();
            });
        });
    }(jQuery, window.Sys));
     document.addEventListener("DOMContentLoaded", function() {
        var isCurrentUserSuperUser = @Json.Encode(ViewBag.IsCurrentUserSuperUser);
        var superuserCheckbox = document.getElementById("chkIsSuperuser");

        if (superuserCheckbox) {
            superuserCheckbox.disabled = !isCurrentUserSuperUser;
        }
     });
document.addEventListener("DOMContentLoaded", function() {
    var ownProfile = @Json.Encode(ViewBag.OwnProfile);
    var userRoleManagementButton = document.getElementById("userRolManagement");

    if (ownProfile) {
        var formElements = document.querySelectorAll('#saveButton, input[type="text"], input[type="email"], input[type="password"], #chkIsSuperuser, #chkApproved, #chkIsDeleted, #chkSendEmail');

        for (var i = 0; i < formElements.length; i++) {
            formElements[i].disabled = true;
            formElements[i].classList.add("disabled-field");
        }
        if (userRoleManagementButton) {
            userRoleManagementButton.classList.add("disabled-field");
            userRoleManagementButton.onclick = function(event) {
                event.preventDefault();
            };
        }
    }
});

</script>