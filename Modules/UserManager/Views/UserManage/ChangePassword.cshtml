@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<Upendo.Modules.UserManager.ViewModels.UserViewModel>

@using DotNetNuke.Web.Mvc.Helpers

@using Lang = Upendo.Modules.UserManager.Utility.Helpers.LocalizationHelper

@{
  string ResourceName = "AddEdit";
}

<div id="Item-@Dnn.ModuleContext.ModuleId">
  <div class="dnnForm dnnEditBasicSettings" id="dnnEditBasicSettings">
    <div class="dnnFormExpandContent dnnRight "><a href="#">@Dnn.LocalizeString("ExpandAll")</a></div>
    <h2 id="dnnSitePanel-BasicSettings" class="dnnFormSectionHead dnnClear">
      <a href="#" class="dnnSectionExpanded">@Dnn.LocalizeString("BasicSettings")</a>
    </h2>
    <fieldset>
      <div class="formItem col-6">
        <div><label>@Lang.GetString("Password", ResourceName)</label></div>
        @Html.TextBoxFor(m => m.Password, new
        {
            @class = "form-control",
            @id = "password",
            @type = "password",
        onkeyup = "handlePasswordValidation();"
        })
        <span id="passwordValidationMessage"></span>
      </div>
      <div class="formItem col-6">
        <div><label>@Lang.GetString("ConfirmPassword", ResourceName)</label></div>
        @Html.TextBoxFor(m => m.ConfirmPassword, new
        {
            @id = "confirm_password",
            @type = "password",
            onkeyup = "validatePassword();"
        })
        <span id='message'></span>
      </div>
      @Html.HiddenFor(m => m.UserId)
    </fieldset>
  </div>
  <div class="buttonForm mt20">
    <div class="center">
      <button type="submit" class="primary" id="saveButton">Save</button>
      <button id="cancelEdit" href="#">@Dnn.LocalizeString("Cancel")</button>
    </div>
  </div>
</div>

<script type="text/javascript">
    var weak = '@Lang.GetString("Weak.Text", ResourceName)';
    var fair = '@Lang.GetString("Fair.Text", ResourceName)';
    var strong = '@Lang.GetString("Strong.Text", ResourceName)';
    var passwordMatch = '@Lang.GetString("PasswordMatch.Text", ResourceName)';
    var match = '@Lang.GetString("Match.Text", ResourceName)';

    function validatePassStrength(pass, minLength, minNumberOfSpecialChars, validationExpression) {
        var passwordElement = document.getElementById('password');
        var passwordValidationMessage = document.getElementById('passwordValidationMessage');
        if (pass.length < minLength) {
            passwordElement.style.color = "red";
            passwordValidationMessage.style.color = "red";
            return weak;
        }
        var specialChars = pass.match(/[!@@#$%^&*(),.?":{}|<>+\-]/g);
        if (specialChars === null || specialChars.length < minNumberOfSpecialChars) {
            passwordElement.style.color = "#f6d500";
            passwordValidationMessage.style.color = "#f6d500";
            return fair;
        }
        if (validationExpression !== "" && !new RegExp(validationExpression).test(pass)) {
            passwordElement.style.color = "#f6d500";
            passwordValidationMessage.style.color = "#f6d500";
            return fair;
        }
        passwordElement.style.color = "green";
        passwordValidationMessage.style.color = "green";
        return strong;
    }
    function validatePassword() {
        var password = document.getElementById('password').value;
        var confirm_password = document.getElementById('confirm_password').value;
        var message = document.getElementById('message');
        if (password == confirm_password) {
            message.style.color = 'green';
            message.innerHTML = Match;
            // Enabling a button again
            document.querySelector('#saveButton').classList.remove("disabled");
            document.querySelector('#saveButton').classList.add("primary");
        } else {
            message.style.color = 'red';
            message.innerHTML = passwordMatch;
            // Disabling a button
            document.querySelector('#saveButton').classList.remove("primary");
            document.querySelector('#saveButton').classList.add("disabled");
        }
    }
    /*globals jQuery, window, Sys */
    (function ($, Sys) {
        function dnnEditBasicSettings() {
            $('#dnnEditBasicSettings').dnnPanels();
            $('#dnnEditBasicSettings .dnnFormExpandContent a').dnnExpandAll({
                expandText: '@Dnn.LocalizeString("ExpandAll")',
                collapseText: '@Dnn.LocalizeString("CollapseAll")',
                targetArea: '#dnnEditBasicSettings'
            });
        };
        $(function () {
            $('#cancelEdit').click(function () { dnnModal.closePopUp(false); });
            dnnEditBasicSettings();
            Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function () {
                dnnEditBasicSettings();
            });
        });
    }(jQuery, window.Sys));
</script>
